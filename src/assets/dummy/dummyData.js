export const groupTestData = [
  { name: 'Group A', value: 400 },
  { name: 'Group B', value: 300 },
  { name: 'Group C', value: 300 },
  { name: 'Group D', value: 200 },
  { name: 'Group E', value: 400 },
];
export const buyTestData = [
  { name: '구매의향 있음', value: 80 },
  { name: '구매의향 없음', value: 20 },
];
export const genderTestData = [
  { name: '남', value: 80 },
  { name: '여', value: 20 },
];
export const ageTestData = [
  { name: '20-24세', value: 20 },
  { name: '25-29세', value: 60 },
  { name: '30-34세', value: 100 },
  { name: '35-39세', value: 120 },
  { name: '40-44세', value: 80 },
];

export const successTestData = [
  { name: '성공', value: 70 },
  { name: '실패', value: 30 },
];
export const straightRateTestData = [
  { name: '매우 낮음', value: 4.5 },
  { name: '낮음', value: 2 },
  { name: '높음', value: 3 },
  { name: '매우 높음', value: 1.5 },
];
export const basicBarTestData = [{ name: 'bing', value: 80 }];
export const basicBarTestData3 = [{ name: '0', value: 75, data: 75 }];
export const stackedBarTestData = [{ name: 'bing', value: 0.2, value1: 0.1, value2: 0.3, value3: 0.2 }];
export const tableBarChartBrandData = ['상위 33% 이내 브랜드', '상위 9% 이내 브랜드', '상위 5% 이내 브랜드'];
export const brandBarChartData = [
  { name: '의뢰기업', value: 94, fatality: 4.3 },
  { name: '경쟁사 A', value: 38.8, fatality: 2.3 },
  { name: '경쟁사 B', value: 50, fatality: 5.3 },
];

export const tableBarChartTestData = ['다소 (0~15%)', '꽤나 (15~30%)', '많이 (31~45%)', '매우 (45%이상)'];
export const tableBarTestData = [
  { name: '기능 1', value: 94, fatality: 4.3 },
  { name: '기능 2', value: 38.8, fatality: 2.3 },
  { name: '기능 3', value: 50, fatality: 5.3 },
];
export const featureSpecificDetailData = [{ name: '기능 3', value: 50, fatality: 5.3 }];

export const featureUseData = [
  { name: '유저가 에러를 인지/판단/복구하도록 돕기', value: 46, fatality: 4.35, mention: 43.5 },
  { name: '유저의 선택권 및 자유도', value: 18, fatality: 2.3, mention: 23 },
  { name: '시스템과 살제 세상의 매칭', value: 58, fatality: 5.3, mention: 53 },
];
export const featureUseData3 = [{ name: '유저가 에러를 인지/판단/복구하도록 돕기', value: 46, fatality: 4.35, mention: 43.5 }];

export const featureUseData2 = [
  { name: '유저가 에러를 인지/판단/복구하도록 돕기', value: 46, fatality: 4.35, mention: 43.5 },
  { name: '유저의 선택권 및 자유도', value: 18, fatality: 2.3, mention: 23 },
  { name: '시스템과 살제 세상의 매칭', value: 58, fatality: 5.3, mention: 53 },
  { name: '유저가 에러를 인지/판단/복구하도록 돕기', value: 46, fatality: 4.35, mention: 43.5 },
  { name: '유저의 선택권 및 자유도', value: 18, fatality: 2.3, mention: 23 },
  { name: '시스템과 살제 세상의 매칭', value: 58, fatality: 5.3, mention: 53 },
  { name: '유저가 에러를 인지/판단/복구하도록 돕기', value: 46, fatality: 4.35, mention: 43.5 },
  { name: '유저의 선택권 및 자유도', value: 18, fatality: 2.3, mention: 23 },
  { name: '시스템과 살제 세상의 매칭', value: 58, fatality: 5.3, mention: 53 },
  { name: '유저가 에러를 인지/판단/복구하도록 돕기', value: 46, fatality: 4.35, mention: 43.5 },
  { name: '유저의 선택권 및 자유도', value: 18, fatality: 2.3, mention: 23 },
  { name: '시스템과 살제 세상의 매칭', value: 58, fatality: 5.3, mention: 53 },
  { name: '유저가 에러를 인지/판단/복구하도록 돕기', value: 46, fatality: 4.35, mention: 43.5 },
  { name: '유저의 선택권 및 자유도', value: 18, fatality: 2.3, mention: 23 },
  { name: '시스템과 살제 세상의 매칭', value: 58, fatality: 5.3, mention: 53 },
];

export const tableBarChartTestData2 = ['0~20', '21~40', '41~60', '61~80', '81~100'];
export const tableBarChartTestData3 = ['0~20', '21~40'];
export const histogramBarTestData = [
  { name: '0', value: 20, data: 81 },
  {
    name: '10000',
    value: 40,
    data: 31,
  },
  {
    name: '20000',
    value: 60,
    data: 21,
  },
  {
    name: '30000',
    value: 90,
    data: 79,
  },
  {
    name: '40000',
    value: 70,
    data: 90,
  },
  {
    name: '50000',
    value: 30,
    data: 40,
  },
  {
    name: '60000',
    value: 0,
    data: 0,
  },
  // {
  //   name: '80000',
  //   value: 0,
  //   data: 0,
  // },
];

export const verticalData = [
  {
    name: '가나다라마바사 아자차카 타파하 ABCD EFG',
    value: 30,
    contents:
      "Specify the domain of axis when the axis is a number axis. The length of domain should be 2, and we will validate the values in domain. And each element in the array can be a number, 'auto', 'dataMin', 'dataMax', a string like 'dataMin - 20', 'dataMax + 100', or a function that accepts a single argument and returns a number. If any element of domain is set to be 'auto', comprehensible scale ticks will be calculated, and the final domain of axis is generated by the ticks.",
  },
  {
    name: '가나다라마바사 아자차카 타파하 ABCD EFG',
    value: 80,
    contents:
      "Specify the domain of axis when the axis is a number axis. The length of domain should be 2, and we will validate the values in domain. And each element in the array can be a number, 'auto', 'dataMin', 'dataMax', a string like 'dataMin - 20', 'dataMax + 100', or a function that accepts a single argument and returns a number. If any element of domain is set to be 'auto', comprehensible scale ticks will be calculated, and the final domain of axis is generated by the ticks.",
  },
  {
    name: './src/components/atoms/SimpleBarChart/index.tsx',
    value: 90,
    contents:
      "Specify the domain of axis when the axis is a number axis. The length of domain should be 2, and we will validate the values in domain. And each element in the array can be a number, 'auto', 'dataMin', 'dataMax', a string like 'dataMin - 20', 'dataMax + 100', or a function that accepts a single argument and returns a number. If any element of domain is set to be 'auto', comprehensible scale ticks will be calculated, and the final domain of axis is generated by the ticks.",
  },
  {
    name: '1234 567 89 10 기니디리 미비시 1234 567 89 10 기니디리 미비시',
    value: 100,
    contents:
      "Specify the domain of axis when the axis is a number axis. The length of domain should be 2, and we will validate the values in domain. And each element in the array can be a number, 'auto', 'dataMin', 'dataMax', a string like 'dataMin - 20', 'dataMax + 100', or a function that accepts a single argument and returns a number. If any element of domain is set to be 'auto', comprehensible scale ticks will be calculated, and the final domain of axis is generated by the ticks.",
  },
  {
    name: 'YAML 또한 JSON과 비슷하게 사람이 읽기 쉬운 형태의 데이터 표현 형식입니다',
    value: 50,
    contents:
      "Specify the domain of axis when the axis is a number axis. The length of domain should be 2, and we will validate the values in domain. And each element in the array can be a number, 'auto', 'dataMin', 'dataMax', a string like 'dataMin - 20', 'dataMax + 100', or a function that accepts a single argument and returns a number. If any element of domain is set to be 'auto', comprehensible scale ticks will be calculated, and the final domain of axis is generated by the ticks.",
  },
  {
    name: 'YAML',
    value: 80,
    contents:
      "Specify the domain of axis when the axis is a number axis. The length of domain should be 2, and we will validate the values in domain. And each element in the array can be a number, 'auto', 'dataMin', 'dataMax', a string like 'dataMin - 20', 'dataMax + 100', or a function that accepts a single argument and returns a number. If any element of domain is set to be 'auto', comprehensible scale ticks will be calculated, and the final domain of axis is generated by the ticks.",
  },
];

export const data = [
  {
    label: '가',
    first: 4000,
    second: 2400,
    third: 2400,
  },
  {
    label: '나',
    first: 3000,
    second: 1398,
    third: 2210,
  },
  {
    label: '다',
    first: 2000,
    second: 9800,
    third: 2290,
  },
  {
    label: '라',
    first: 2780,
    second: 3908,
    third: 2000,
  },
  {
    label: '마',
    first: 1890,
    second: 4800,
    third: 2181,
  },
  {
    label: '바',
    first: 2390,
    second: 3800,
    third: 2500,
  },
  {
    label: '사',
    first: 3490,
    second: 4300,
    third: 2100,
  },
];
